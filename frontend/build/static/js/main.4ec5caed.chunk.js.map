{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstant.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productCreate","success","productDelete","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","console","log","token","config","headers","Authorization","axios","get","data","message","response","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","placeholder","className","onChange","target","value","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","props","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","listTopProducts","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","varaint","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","cartitems","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","userEditScreen","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4ec5caed.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderPayReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productCreate: productCreateReducer,\n  productDelete: productDeleteReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n} from \"../constants/productConstants\";\n\n// handles the state for the product list which we see on home page.\n/*\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    // where we make fetch request\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    // when we get teh data\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n*/\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\n// reviews is an array.\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    // where we make fetch request\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    // when we get teh data\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\n// reviews is an array.\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    // where we make fetch request\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    // when we get teh data\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    // where we make fetch request\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    // when we get teh data\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    // where we make fetch request\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    // when we get teh data\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    // where we make fetch request\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n    // when we get teh data\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    // where we make fetch request\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] };\n    // when we get teh data\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstants\";\r\n\r\n// can have more than one item in the cart so  array.\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_CLEAR_ITEMS = \"CART_RESET\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from \"../constants/userConstant\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    // where we make fetch request\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    // when we get teh data\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    // where we make fetch request\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    // when we get teh data\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    // where we make fetch request\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    // when we get teh data\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//git it was this way.\r\n// export const userUpdateProfileReducer = (state = { user: {} }, action) => {\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    // where we make fetch request\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    // when we get teh data\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    // where we make fetch request\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    // when we get teh data\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    // where we make fetch request\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    // when we get teh data\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// with reset return state object with empty user.\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    // where we make fetch request\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    // when we get teh data\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        order: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstant\";\r\nimport axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // set data to local storage.\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  localStorage.removeItem(\"cartItems\");\r\n  localStorage.removeItem(\"shippingAddress\");\r\n  localStorage.removeItem(\"paymentMethod\");\r\n\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  document.location.href = \"/login\";\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // once register log them in.\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // set data to local storage.\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    console.log(userInfo.token);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n\r\n    // pass that updated user into user details so it trickles down to the state.\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        placeholder=\"Search Products...\"\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n// call action useDispatch, bring something in useSelector\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport { logout } from \"../actions/userActions\";\nimport SearchBox from \"./SearchBox\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  // get loggedin userinfo.\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            {/* for getting history. */}\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout{\" \"}\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader(props) {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      {' '}\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","/*\r\nimport React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n*/\r\n\r\nimport React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_TOP_FAIL,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_REQUEST,\n} from \"../constants/productConstants\";\nimport { logout } from \"../actions/userActions\";\n\n// actioncreators. thunk to add in function within another function.\n/*\nexport const listProducts =\n  (keyword = \"\", pageNumber = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n\n      const { data } = await axios.get(\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n      );\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n*/\n\nexport const listProducts =\n  (keyword = \"\", pageNumber = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n\n      const { data } = await axios.get(\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n      );\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products`, {}, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n\n      if (message === \"Not authorized, token failed\") {\n        dispatch(logout());\n      }\n\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload: message,\n      });\n    }\n  };\n\nexport const listTopProducts =\n  (keyword = \"\", pageNumber = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_TOP_REQUEST });\n\n      const { data } = await axios.get(`/api/products/top`);\n\n      dispatch({\n        type: PRODUCT_TOP_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_TOP_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Carousel, Image } from \"react-bootstrap\";\r\nimport Message from \"./Message\";\r\nimport Loader from \"./Loader\";\r\nimport { listTopProducts } from \"../actions/productActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Carousel pause=\"hover\" className=\"bg-dark\">\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={\"/product/${product._id\"}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className=\"carousel-caption\">\r\n              <h2>\r\n                {product.name} ${product.price}\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keywords\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Welcome to Proshop\",\r\n  description: \"electronics, buy electronics, cheap electronics\",\r\n  keywords: \"keywords\",\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport { listProducts } from \"../actions/productActions\";\nimport Meta from \"../components/Meta\";\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  // meta tag gets generated after the initial js load.\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n/*\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Paginate\";\nimport Paginate from \"../components/Loader\";\nimport { listProducts } from \"../actions/productActions\";\nimport ProductCarousel from \"../components/ProductCarousel\";\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  // dispatch listProducts actions. Makes request to backend to get products. this will fill up our state.\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      {!keyword && <ProductCarousel />}\n\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n*/\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport Meta from \"../components/Meta\";\n\nconst ProductScreen = ({ history, match }) => {\n  const dispatch = useDispatch();\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id));\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                          {/* ex: if countInStock is 5 then it will give [0,1,2,3,4] */}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant=\"success\">\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                        <Button\n                          disabled={loadingProductReview}\n                          type=\"submit\"\n                          variant=\"primary\"\n                        >\n                          Submit\n                        </Button>\n                      </Form.Group>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sign in</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  // paylaod data will be displayed ont he cart.\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  // save entire cart. to convert js object so json stringify to save string in local storage.\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  // location.search is ?qty={$number}\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  // console.log(qty);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  // console.log(cartItems);\r\n\r\n  // dispatch if product id present.\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    // console.log(\"remove\");\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n    // console.log(\"checkout\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems && cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  // userInfo null if not loggedin.\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // DISPATCH LOGIN\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" varaint=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  // userInfo null if not loggedin.\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // DISPATCH REGISTER\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmpassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            value={confirmPassword}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" varaint=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderAction\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstant\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  // restrict if user not logged in.\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // get success value\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  // getorderlistmystate\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  console.log(user);\r\n\r\n  // userInfo null if not loggedin.\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // DISPATCH REGISTER\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      // DISPATCH UPDATE PROFILE\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value={password}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"confirmpassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                value={confirmPassword}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" varaint=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders &&\r\n                orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button className=\"btn-sm\" variant=\"light\">\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from \"../constants/orderConstants\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //pass in order object to post request.\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    // get req no content type.\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //pass in order object to post request.\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// payment reseult will come from paypal.\r\n// export const payOrder =\r\n//   (orderId, paymentResult) => async (dispatch, getState) => {\r\n//     try {\r\n//       dispatch({\r\n//         type: ORDER_PAY_REQUEST,\r\n//       });\r\n\r\n//       const {\r\n//         userLogin: { userInfo },\r\n//       } = getState();\r\n\r\n//       // get req no content type.\r\n//       const config = {\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${userInfo.token}`,\r\n//         },\r\n//       };\r\n\r\n//       console.log(orderId);\r\n//       console.log(paymentResult);\r\n\r\n//       //pass in order object to post request.\r\n//       const { data } = await axios.get(\r\n//         `/api/orders/${orderId}/pay`,\r\n//         paymentResult,\r\n//         config\r\n//       );\r\n\r\n//       dispatch({\r\n//         type: ORDER_PAY_SUCCESS,\r\n//         payload: data,\r\n//       });\r\n//     } catch (error) {\r\n//       dispatch({\r\n//         type: ORDER_PAY_FAIL,\r\n//         payload:\r\n//           error.response && error.response.data.message\r\n//             ? error.response.data.message\r\n//             : error.message,\r\n//       });\r\n//     }\r\n//   };\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <>\r\n      <Nav className=\"justify-content-center mb-4\">\r\n        <Nav.Item>\r\n          {step1 ? (\r\n            <Nav.Link as={Link} to=\"/login\">\r\n              Sign In\r\n            </Nav.Link>\r\n          ) : (\r\n            <Nav.Link disabled as={Link} to=\"/login\">\r\n              Sign In\r\n            </Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          {step2 ? (\r\n            <Nav.Link as={Link} to=\"/shipping\">\r\n              Shipping{\" \"}\r\n            </Nav.Link>\r\n          ) : (\r\n            <Nav.Link disabled as={Link} to=\"/shipping\">\r\n              Shipping{\" \"}\r\n            </Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          {step3 ? (\r\n            <Nav.Link as={Link} to=\"/payment\">\r\n              Payment{\" \"}\r\n            </Nav.Link>\r\n          ) : (\r\n            <Nav.Link disabled as={Link} to=\"/payment\">\r\n              Payment{\" \"}\r\n            </Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          {step4 ? (\r\n            <Nav.Link as={Link} to=\"/placeorder\">\r\n              Place Order\r\n            </Nav.Link>\r\n          ) : (\r\n            <Nav.Link disabled as={Link} to=\"/placeorder\">\r\n              Place Order\r\n            </Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n\r\n// <Nav.Item>\r\n// {props.step2 ? (\r\n//   <LinkContainer to=\"/shipping\">\r\n//     {\" \"}\r\n//     <Nav.Link>Shipping</Nav.Link>\r\n//   </LinkContainer>\r\n// ) : (\r\n//   <Nav.Link disabled>Shipping</Nav.Link>\r\n// )}\r\n// </Nav.Item>\r\n// const CheckoutSteps = (props) => {\r\n//   return (\r\n//     <>\r\n//       <Nav className=\"justify-content-center mb-4\">\r\n//         <Nav.Item>\r\n//           {props.step1 ? (\r\n//             <LinkContainer to=\"/login\">\r\n//               {\" \"}\r\n//               <Nav.Link>Sign In</Nav.Link>\r\n//             </LinkContainer>\r\n//           ) : (\r\n//             <Nav.Link disabled>Sign In</Nav.Link>\r\n//           )}\r\n//         </Nav.Item>\r\n//         <Nav.Item>\r\n//           {props.step2 ? (\r\n//             <LinkContainer to=\"/shipping\">\r\n//               {\" \"}\r\n//               <Nav.Link>Shipping</Nav.Link>\r\n//             </LinkContainer>\r\n//           ) : (\r\n//             <Nav.Link disabled>Shipping</Nav.Link>\r\n//           )}\r\n//         </Nav.Item>\r\n//         {/* <Nav.Item>\r\n//         {step3 ? (\r\n//           <LinkContainer to=\"/payment\">\r\n//             {\" \"}\r\n//             <Nav.Link>Payment</Nav.Link>\r\n//           </LinkContainer>\r\n//         ) : (\r\n//           <Nav.Link disabled>Payment</Nav.Link>\r\n//         )}\r\n//       </Nav.Item>\r\n//       <Nav.Item>\r\n//         {step4 ? (\r\n//           <LinkContainer to=\"/placeorder\">\r\n//             {\" \"}\r\n//             <Nav.Link>Place Order</Nav.Link>\r\n//           </LinkContainer>\r\n//         ) : (\r\n//           <Nav.Link disabled>Place Order</Nav.Link>\r\n//         )}\r\n//       </Nav.Item> */}\r\n//       </Nav>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","// where we choose the payment method.\r\nimport React, { useState } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      {/* <div> */}\r\n      <CheckoutSteps step1 step2 step3 />\r\n      {/* </div> */}\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../actions/orderAction\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { USER_DETAILS_RESET } from \"../constants/userConstant\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  } else if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  // for two decimal places.\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  //Calculate prices.\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [history, success]);\r\n\r\n  const placeOrderHander = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}{\" \"}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {cart.cartItems.length === 0 ? (\r\n                  <Message>Your cart is empty</Message>\r\n                ) : (\r\n                  <ListGroup variant=\"flush\">\r\n                    {cart.cartItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            {/* product is the id here */}\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </p>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartitems === 0}\r\n                  onClick={placeOrderHander}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from \"../actions/orderAction\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  // just renaming\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  // just renaming\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  if (!loading && order) {\r\n    // for two decimal places.\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    //Calculate prices.\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order]);\r\n\r\n  // //   check for the order and also make sure that the order ID matches the ID in the URL.\r\n  // // If it does not, then dispatch getOrderDetails() to fetch the most recent order\r\n  // useEffect(() => {\r\n  //   // fetch the client id from backend.\r\n  //   const addPayPalScript = async () => {\r\n  //     const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n  //     // console.log(clientId);\r\n  //     const script = document.createElement(\"script\");\r\n  //     script.type = \"text/javascript\";\r\n  //     script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n  //     script.async = true;\r\n  //     // have a state for when sdk is ready.\r\n  //     script.onload = () => {\r\n  //       setSdkReady(true);\r\n  //     };\r\n  //     document.body.appendChild(script);\r\n  //   };\r\n\r\n  //   addPayPalScript();\r\n\r\n  //   // when order not there dispatch also when successfully paid dispatch.\r\n  //   if (successPay || !order || order._id !== orderId) {\r\n  //     dispatch({ type: ORDER_PAY_RESET });\r\n  //     dispatch(getOrderDetails(orderId));\r\n  //   } else if (!order.isPaid) {\r\n  //     if (!window.paypal) {\r\n  //       addPayPalScript();\r\n  //     } else {\r\n  //       setSdkReady(true);\r\n  //     }\r\n  //   }\r\n  // }, [dispatch, successPay, order, orderId]);\r\n\r\n  // from paypal takes paymentresult. update db to paid.\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n    //\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}{\" \"}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {order.orderItems.length === 0 ? (\r\n                  <Message>Your cart is empty</Message>\r\n                ) : (\r\n                  <ListGroup variant=\"flush\">\r\n                    {order.orderItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            {/* product is the id here */}\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </p>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  // want list users to reload when delete success.\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users &&\r\n              users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"green\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"read\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`user/${user._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(user._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstant\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n// import { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  //   // pass user into useEffect dependency so it updates.\r\n  useEffect(() => {\r\n    // successupdate then reset the userState or update state and then redirect to userlist once updated.\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userList\");\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"isAdmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Button type=\"submit\" varaint=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Form, Button } from \"react-bootstrap\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Message from \"../components/Message\";\r\n// import Loader from \"../components/Loader\";\r\n// import { getUserDetails } from \"../actions/userActions\";\r\n\r\n// const userEditScreen = ({ match }) => {\r\n//   const userId = match.params.id;\r\n\r\n//   const [name, setName] = useState(\"\");\r\n//   const [isAdmin, setIsAdmin] = useState(false);\r\n//   const [email, setEmail] = useState(\"\");\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const userDetails = useSelector((state) => state.userDetails);\r\n//   const { loading, error, user } = userDetails;\r\n\r\n//   // pass user into useEffect dependency so it updates.\r\n//   useEffect(() => {\r\n//     if (!user.name || user._id != userId) {\r\n//       dispatch(getUserDetails(userId));\r\n//     } else {\r\n//       setName(user.name);\r\n//       setEmail(user.email);\r\n//       setIsAdmin(user.isAdmin);\r\n//     }\r\n//   }, [user]);\r\n\r\n//   const submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     // DISPATCH UPDATE\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n//         Go Back\r\n//       </Link>\r\n//       <FormContainer>\r\n//         <h1>Edit User</h1>\r\n//         {loading ? (\r\n//           <Loader />\r\n//         ) : error ? (\r\n//           <Message variant=\"danger\">{error}</Message>\r\n//         ) : (\r\n//           <Form onSubmit={submitHandler}>\r\n//             <Form.Group controlId=\"name\">\r\n//               <Form.Label>Name</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"name\"\r\n//                 placeholder=\"Enter name\"\r\n//                 onChange={(e) => setName(e.target.value)}\r\n//                 value={name}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n//             <Form.Group controlId=\"email\">\r\n//               <Form.Label>Email Address</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"email\"\r\n//                 placeholder=\"Enter email\"\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 value={email}\r\n//               ></Form.Control>\r\n//             </Form.Group>\r\n//             <Form.Group controlId=\"isAdmin\">\r\n//               <Form.Check\r\n//                 type=\"checkbox\"\r\n//                 label=\"Is Admin\"\r\n//                 checked={isAdmin}\r\n//                 onChange={(e) => setIsAdmin(e.target.checked)}\r\n//               ></Form.Check>\r\n//             </Form.Group>\r\n//             <Button type=\"submit\" varaint=\"primary\">\r\n//               Update\r\n//             </Button>\r\n//           </Form>\r\n//         )}\r\n//       </FormContainer>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default userEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport Paginate from \"../components/Paginate\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  //get success value from product delete state.\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // want list users to reload when delete success.\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber)); // passing keyword and pagenumber to the action.\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      // DELETE PRODUCTS\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    //CREATE PRODUCT\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\">Create Product</i>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>BRAND</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products &&\r\n              products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <Paginate pages={pages} page={page} isAdmin={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n// import { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  // pass user into useEffect dependency so it updates.\r\n  useEffect(() => {\r\n    // successupdate then reset the userState or update state and then redirect to userlist once updated.\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  // making http request.\r\n  const uploadFileHandler = async (e) => {\r\n    // array since can upload multiple files. we are going to use single file.\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // UPDATE PRODUCT.\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                value={price}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                onChange={(e) => setImage(e.target.value)}\r\n                value={image}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"brand\"\r\n                placeholder=\"Enter brand\"\r\n                onChange={(e) => setBrand(e.target.value)}\r\n                value={brand}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter countInStock\"\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n                value={countInStock}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                value={category}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                value={description}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" varaint=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../actions/orderAction\";\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // want list users to reload when delete success.\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders &&\r\n              orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.user && order.user.name}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"read\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"read\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`order/${order._id}`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport userEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n\n          {/* ?to make id optional. */}\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={userEditScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/orderList\" component={OrderListScreen} />\n          <Route path=\"/admin/order/:id\" component={OrderScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n            exact\n          />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}